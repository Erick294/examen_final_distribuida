plugins {
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '8.4'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation platform("io.helidon:helidon-dependencies:3.2.6")

    implementation('io.helidon.microprofile.bundles:helidon-microprofile')
    implementation ("io.helidon.microprofile.health:helidon-microprofile-health")
    implementation("io.helidon.microprofile.server:helidon-microprofile-server")
    implementation("io.helidon.microprofile.config:helidon-microprofile-config")

    implementation ("org.hibernate:hibernate-core:6.2.7.Final" )
    implementation ("io.helidon.common:helidon-common")

    implementation ("org.postgresql:postgresql")

    implementation 'org.eclipse.persistence:org.eclipse.persistence.jpa'
    implementation 'io.helidon.integrations.cdi:helidon-integrations-cdi-jpa'

    compileOnly("jakarta.enterprise:jakarta.enterprise.cdi-api")

    testImplementation ("io.helidon.microprofile.bundles:internal-test-libs:2.0.0-M3")
    testImplementation ("io.helidon.microprofile.cdi:helidon-microprofile-cdi:3.2.2")

}

application {
    mainClass = 'io.helidon.microprofile.cdi.Main'
}

test {
    useJUnitPlatform()
}

task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

copyLibs.dependsOn jar
assemble.dependsOn copyLibs

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes (
                'Main-Class': "io.helidon.microprofile.cdi.Main",
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

task copyBeansXML {
  doLast {
    ant.copy file: "${projectDir}/src/main/resources/META-INF/beans.xml",
             todir: "${buildDir}/classes/java/main/META-INF"
  }
}

classes.dependsOn copyBeansXML